2---
- name: -----> Initialization Git for Application
  hosts: localhost
#   become: yes
  vars:
    project_name: "{{ lookup('env','PROJECT_NAME') }}"
    project_port: "{{ lookup('env','PROJECT_PORT') }}"
    repository: "{{ lookup('env','REPO') }}"
    app_dir: /home/jenkins/projects/{{ project_name }}/repo
    deployments_dir: /home/ansible/docker-projects/{{ project_name }}/deployments

  tasks:
  - name: Check repo
    debug: vars={{ repository }}
    
#   - name: Configure Repository
#     shell: git config --global user.name 'CI' && git config --global user.email 's.gusseynov@gmail.com'

  - name: Check exists Git
    stat: path="{{ app_dir }}"
    register: stat_git
          
#   - name: Check exist (create) project`s app directory {{ app_dir }}
#     file: 
#       path: "{{ app_dir }}"
#       state: directory    
#       owner: jenkins
#       group: jenkins
#       mode: 0777

  - name: Cloning from repository {{ repository }}
    shell: mkdir -p {{ app_dir }} && cd {{ app_dir }} && git init && git clone git@repository.ecc.kz:isgp/public_dev_isbp.git
    when: not stat_git.stat.exists   
    
#   git:
#       repo: "{{ repository }}"
#       dest: "{{ app_dir }}"
#     when: not stat_git.stat.exists   

  - name: Pulling from repository
    shell: cd {{ app_dir }} && git pull &&  git config --list
    when: stat_git.stat.exists   
       
#   - name: Stopping service {{ project_name }}
#     shell: cd {{ home_dir }} && docker-compose stop {{ project_name }}   

#   - name: Starting docker-compose
#     shell: cd {{ home_dir }} && docker-compose up -d --build
    
#   - name: Starting service {{ project_name }}
#     shell: cd {{ home_dir }} && docker-compose start {{ project_name }}

  
